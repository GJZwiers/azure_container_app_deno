on: push
name: Bicep deploy

jobs:
  resource_groups:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@main
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy resource groups
      id: resourcegroups
      uses: azure/arm-deploy@v1
      with:
        template: ./infra/resource_groups/main.bicep
        scope: subscription
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        region: westeurope
    outputs:
      registryRGName: ${{ steps.resourcegroups.outputs.registryRGName }}
      ctnrAppRgName: ${{ steps.resourcegroups.outputs.ctnrAppRgName }}

  build_and_deploy:
    needs: resource_groups
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@main
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy container registry
      id: registry
      uses: azure/arm-deploy@v1
      with:
        template: ./infra/registry/main.bicep
        scope: resourcegroup
        resourceGroupName: ${{ needs.resourcegroups.outputs.registryRGName }}
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        region: westeurope

    - name: Build image
      id: acr
      uses: azure/acr-build@v1
      with:
        service_principal: ${{ secrets.AZ_SP_CLIENT_ID }}
        service_principal_password: ${{ secrets.AZ_SP_CLIENT_SECRET }}
        tenant: ${{ secrets.TENANT }}
        registry: ${{ steps.registry.outputs.registryName }}
        repository: server
        image: dev
        tag: ${{ github.sha }}
        git_access_token: ${{ secrets.GIT_ACCESS_TOKEN }}
        branch: main

    - name: Deploy infrastructure
      uses: azure/arm-deploy@v1
      with:
        template: ./infra/main.bicep
        scope: resourcegroup
        resourceGroupName: ${{ needs.resourcegroups.outputs.ctnrAppRgName }}
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        region: westeurope
        failOnStdErr: true
        parameters: >
          tag=${{ github.sha }}
          registryName=${{ steps.registry.outputs.registryName }}
          registryResourceGroup=${{ steps.registry.outputs.resourceGroupName }}
          subscriptionId=${{ secrets.AZURE_SUBSCRIPTION }}
